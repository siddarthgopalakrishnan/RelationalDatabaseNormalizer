/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package module1gui;

import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import RelationalDatabase.*;
import java.util.HashSet;

/**
 *
 * @author ASUS
 */
public class InputsPage extends javax.swing.JFrame {

    /**
     * Creates new form InputsPage
     */
    public InputsPage() {
        initComponents();
        InputsPagePanel.setFocusable(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        InputsPagePanel = new javax.swing.JPanel();
        TitleLabel = new javax.swing.JLabel();
        RelationinputLabel = new javax.swing.JLabel();
        FDinputLabel = new javax.swing.JLabel();
        RelationTextField = new javax.swing.JTextField();
        FDTextField = new javax.swing.JTextField();
        InputNextButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("INPUTS PAGE");
        setBounds(new java.awt.Rectangle(100, 50, 0, 0));

        TitleLabel.setBackground(new java.awt.Color(51, 255, 255));
        TitleLabel.setFont(new java.awt.Font("Tahoma", 1, 33)); // NOI18N
        TitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TitleLabel.setText("Relational Database Normalizer (Module 1)");
        TitleLabel.setOpaque(true);

        RelationinputLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        RelationinputLabel.setText("Please enter the Relation :");

        FDinputLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        FDinputLabel.setText("Please enter the FDs :");

        RelationTextField.setFont(new java.awt.Font("Monospaced", 0, 20)); // NOI18N
        RelationTextField.setText("(eg: R(A,B,C,D))");
        RelationTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                RelationTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                RelationTextFieldFocusLost(evt);
            }
        });
        RelationTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RelationTextFieldActionPerformed(evt);
            }
        });

        FDTextField.setFont(new java.awt.Font("Monospaced", 0, 20)); // NOI18N
        FDTextField.setText("(eg: A->B;C->D;A,B->C,D)");
        FDTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                FDTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                FDTextFieldFocusLost(evt);
            }
        });

        InputNextButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        InputNextButton.setText("NEXT >>");
        InputNextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InputNextButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout InputsPagePanelLayout = new javax.swing.GroupLayout(InputsPagePanel);
        InputsPagePanel.setLayout(InputsPagePanelLayout);
        InputsPagePanelLayout.setHorizontalGroup(
            InputsPagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TitleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 933, Short.MAX_VALUE)
            .addGroup(InputsPagePanelLayout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(InputsPagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(InputNextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(InputsPagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(RelationTextField)
                        .addComponent(RelationinputLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(FDinputLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(FDTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 739, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        InputsPagePanelLayout.setVerticalGroup(
            InputsPagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InputsPagePanelLayout.createSequentialGroup()
                .addComponent(TitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(RelationinputLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RelationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(FDinputLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(FDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66)
                .addComponent(InputNextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 71, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(InputsPagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(InputsPagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RelationTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RelationTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RelationTextFieldActionPerformed

    private void InputNextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputNextButtonActionPerformed
        // TODO add your handling code here:
        if(RelationTextField.getText().trim().equals("(eg: R(A,B,C,D))") || FDTextField.getText().trim().equals("(eg: A->B;C->D;A,B->C,D)")){
            //User hasn't entered a particular text field
            JOptionPane.showMessageDialog(InputsPage.this, "Please fill in both the text fields.");
            RelationTextField.grabFocus();
            return;
        }
        
        //REGEX Checker
        Pattern patternRelation = Pattern.compile("(R\\()[0-9a-zA-Z](,[0-9a-zA-Z]+)*(\\))");
        String relationFieldInput = RelationTextField.getText();
        Matcher matchRelation = patternRelation.matcher(relationFieldInput);
        boolean isValidRelation = matchRelation.matches();
        if(!isValidRelation) {
            JOptionPane.showMessageDialog(InputsPage.this, "Please fill the Relation correctly.");
            RelationTextField.grabFocus();
            return;
        }
        Pattern patternFDs = Pattern.compile("(([0-9a-zA-Z](,[0-9a-zA-Z]+)*)(->[0-9a-zA-Z](,[0-9a-zA-Z]+)*))((;([0-9a-zA-Z](,[0-9a-zA-Z]+)*)(->[0-9a-zA-Z](,[0-9a-zA-Z]+)*))+)*");
        String fdFieldInput = FDTextField.getText();
        Matcher matchFDs = patternFDs.matcher(fdFieldInput);
        boolean isValidFD = matchFDs.matches();
        if(!isValidFD) {
            JOptionPane.showMessageDialog(InputsPage.this, "Please fill the FDs correctly.");
            FDTextField.grabFocus();
            return;
        }
        
        if(isValidRelation && isValidFD){
            Relation R = new Relation(relationFieldInput, ((relationFieldInput.length() - 2)/2), fdFieldInput);
            
            Module1GUI.reldetPage = new RelationDetailsPage(R);
            Module1GUI.reldetPage.setVisible(true);
            this.setVisible(false);
            RelationTextField.setText("(eg: R(A,B,C,D))");
            FDTextField.setText("(eg: A->B;C->D;A,B->C,D)");
            
        }
        
        
        
    }//GEN-LAST:event_InputNextButtonActionPerformed

    private void RelationTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_RelationTextFieldFocusGained
        // TODO add your handling code here:
        if(RelationTextField.getText().equals("(eg: R(A,B,C,D))")) {
            RelationTextField.setText("");
        }
    }//GEN-LAST:event_RelationTextFieldFocusGained

    private void RelationTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_RelationTextFieldFocusLost
        // TODO add your handling code here:
        if(RelationTextField.getText().equals("")) {
            RelationTextField.setText("(eg: R(A,B,C,D))");
        }
    }//GEN-LAST:event_RelationTextFieldFocusLost

    private void FDTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_FDTextFieldFocusGained
        // TODO add your handling code here:
        if(FDTextField.getText().equals("(eg: A->B;C->D;A,B->C,D)")) {
            FDTextField.setText("");
        }
    }//GEN-LAST:event_FDTextFieldFocusGained

    private void FDTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_FDTextFieldFocusLost
        // TODO add your handling code here:
        if(FDTextField.getText().equals("")) {
            FDTextField.setText("(eg: A->B;C->D;A,B->C,D)");
        }
    }//GEN-LAST:event_FDTextFieldFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InputsPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InputsPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InputsPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InputsPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InputsPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField FDTextField;
    private javax.swing.JLabel FDinputLabel;
    private javax.swing.JButton InputNextButton;
    private javax.swing.JPanel InputsPagePanel;
    private javax.swing.JTextField RelationTextField;
    private javax.swing.JLabel RelationinputLabel;
    private javax.swing.JLabel TitleLabel;
    // End of variables declaration//GEN-END:variables
}
